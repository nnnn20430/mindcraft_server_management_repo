
#	master server block
########################################################################
########################################################################

server {
	listen unix:server/nginxprefix/servers/master;
	listen 0.0.0.0:80 default_server;
	listen [::]:80 default_server;
	
	#ssl
	listen 0.0.0.0:443 default_server ssl;
	listen [::]:443 default_server ssl;
	ssl_certificate secure/server.crt;
	ssl_certificate_key secure/server.key;
	#ssl_ciphers ALL:!DES-CBC3-SHA:!aNULL:!eNULL:!MEDIUM:!LOW:!kRSA:!kECDH:!DSS:!MD5:!SHA1:!EXP:!PSK:!SRP:!CAMELLIA:!SEED;
	ssl_ciphers HIGH:!MEDIUM:!LOW:!eNULL:!aNULL:!kRSA:!kECDH:!EXP:!DES:!RC4:!MD5:!SHA1;
	ssl_dhparam secure/dhparam.pem;
	ssl_prefer_server_ciphers on;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_session_cache builtin:1000 shared:SSL:10m;
	ssl_session_timeout 10m;
	
	server_name "";
	server_name_in_redirect off;
	port_in_redirect off;
	
	#charset koi8-r;
	
	#access_log  logs/host.access.log  main;
	
	add_header Access-Control-Allow-Origin $http_origin;
	
	root "html";
	if ($realpath_root ~ "(.*)(?=\/)") {
		set $REALPATH_NGINXPREFIX $1;
		set $REALPATH_SERVER_ROOT "${REALPATH_NGINXPREFIX}/html";
	}
	location / {
		root html;
		# index directive won't redirect after a rewrite.
		#index index.html index.htm index.cgi index.php;
		autoindex on;
		try_files $uri $uri/ $uri.html =404;
	}
	
	location /server_function/ {
		internal;
	}
	
	set_real_ip_from unix:;
	real_ip_header X-Real-IP;
	real_ip_recursive on;
	
#	favicon
########################################################################
	
	if ($uri = "/favicon.ico") {
		break;
	}
	
	location = /favicon.ico {
		root html;
		try_files /favicon.ico =404;
	}
	
#	forbidden locations
########################################################################
	
	if ($uri ~ "^/server_function") {
		return 403;
	}
	
	if ($uri ~ "^/apps") {
		return 403;
	}
	
	if ($uri ~ "/\.") {
		return 403;
	}
	
#	subdomain redirects
########################################################################
	
	if ($host ~ "^git\..*") {
		rewrite "^/(?!gitweb/)(.*)$" "/gitweb/$1";
	}
	
	if ($host ~ "^hg\..*") {
		rewrite "^/(?!hgweb/)(.*)$" "/hgweb/$1";
	}
	
	if ($host ~ "^code\..*") {
		rewrite "^/(?!cgit/)(.*)$" "/cgit/$1";
	}
	
	if ($host ~ "^fossil\..*") {
		rewrite "^/(?!fossil/)(.*)$" "/fossil/$1";
	}
	
	if ($host ~ "^mirrors\..*") {
		rewrite "^/(.*)$" "/mirrors/$1";
	}
	
	if ($host ~ "^rainloop\..*") {
		rewrite "^/(.*)$" "/rainloop/$1";
	}
	
	if ($host ~ "^termbin\..*") {
		rewrite "^/(.*)$" "/termbin/$1";
	}
	
	if ($host ~ "^pub\..*") {
		rewrite "^/(.*)$" "/pub/$1";
	}
	
	if ($host ~ "^zerobin\..*") {
		rewrite "^/(.*)$" "/ZeroBin/$1";
	}
	
	if ($host ~ "^wiki\..*") {
		rewrite "^/(?!wiki/)(.*)$" "/wiki/$1";
	}
	
#	subdomain proxies
########################################################################
	
	if ($host ~ "^apache\..*") {# proxy to apache server on my pc
		rewrite "^/(?!server_function/)(.*)$" "/server_function/special_apache_domain_handle/$1" last;
	}
	
	location ~ "/server_function/special_apache_domain_handle/(.*)" {
		if ($uri ~* "^/server_function/special_apache_domain_handle/(.*)$") {
			set $request_path $1;
		}
		proxy_http_version 1.1;
		proxy_set_header Connection "keep-alive";
		proxy_pass http://192.168.1.144:80/$request_path$is_args$args;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	
	if ($host ~ "^tracker\..*") {# proxy for opentracker (torrents)
		rewrite "^/(?!server_function/)(.*)$" "/server_function/special_tracker_domain_handle/$1" last;
	}
	
	location ~ "/server_function/special_tracker_domain_handle/(.*)" {
		if ($uri ~* "^/server_function/special_tracker_domain_handle/(.*)$") {
			set $request_path $1;
		}
		proxy_http_version 1.1;
		proxy_set_header Connection "keep-alive";
		proxy_pass http://127.0.0.1:6969/$request_path$is_args$args;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	
	if ($host ~ "^tf2\..*") {# proxy to apache server on my pc
		rewrite "^/(?!server_function/)(.*)$" "/server_function/special_tf2_domain_handle/$1" last;
	}
	
	location ~ "/server_function/special_tf2_domain_handle/(.*)" {
		if ($uri ~* "^/server_function/special_tf2_domain_handle/(.*)$") {
			set $request_path $1;
		}
		proxy_http_version 1.1;
		proxy_set_header Connection "keep-alive";
		proxy_pass http://192.168.1.144:80/$request_path$is_args$args;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	
	if ($host ~ "^radio\..*") {# proxy to icecast radio
		rewrite "^/(?!server_function/)(.*)$" "/server_function/special_radio_domain_handle/$1" last;
	}
	
	location ~ "/server_function/special_radio_domain_handle/(.*)" {
		if ($uri ~* "^/server_function/special_radio_domain_handle/(.*)$") {
			set $request_path $1;
		}
		proxy_http_version 1.1;
		proxy_set_header Connection "keep-alive";
		proxy_pass http://127.0.0.1:8000/$request_path$is_args$args;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	
	if ($host ~ "^citadel\..*") {# proxy to citadel webcit
		rewrite "^/(?!server_function/)(.*)$" "/server_function/special_citadel_domain_handle/$1" last;
	}
	
	location ~ "/server_function/special_citadel_domain_handle/(.*)" {
		if ($uri ~* "^/server_function/special_citadel_domain_handle/(.*)$") {
			set $request_path $1;
		}
		proxy_http_version 1.1;
		proxy_set_header Connection "keep-alive";
		proxy_pass http://127.0.0.1:2000/$request_path$is_args$args;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	
	if ($host ~ "^znc\..*") {# proxy to znc irc bouncer
		rewrite "^/(?!server_function/)(.*)$" "/server_function/special_znc_domain_handle/$1" last;
	}
	
	location ~ "/server_function/special_znc_domain_handle/(.*)" {
		if ($uri ~* "^/server_function/special_znc_domain_handle/(.*)$") {
			set $request_path $1;
		}
		proxy_http_version 1.1;
		proxy_set_header Connection "keep-alive";
		proxy_pass http://127.0.0.1:7781/$request_path$is_args$args;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	
	if ($host ~ "^kiwi\..*") {# proxy to kiwiirc instance (webirc)
		rewrite "^/(?!server_function/)(.*)$" "/server_function/special_kiwi_domain_handle/$1" last;
	}
	
	location ~ "/server_function/special_kiwi_domain_handle/(.*)" {
		if ($uri ~* "^/server_function/special_kiwi_domain_handle/(.*)$") {
			set $request_path $1;
		}
		proxy_http_version 1.1;
		proxy_set_header Connection "keep-alive";
		proxy_pass http://127.0.0.1:7778/$request_path$is_args$args;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	
#	domain redirects/proxies
########################################################################
	
	if ($host ~ "^pony.eu.org$") {
		rewrite "^/(.*)$" "/pony_site/$1";
	}
	
	if ($host ~ "^minecubed.eu.org$") {
		rewrite "^/(?!server_function/)(.*)$" "/server_function/special_minecubed.eu.org_domain_handle/$1" last;
	}
	
	location ~ "/server_function/special_minecubed.eu.org_domain_handle/(.*)" {
		if ($uri ~* "^/server_function/special_minecubed.eu.org_domain_handle/(.*)$") {
			set $request_path $1;
		}
		proxy_http_version 1.1;
		proxy_set_header Connection "keep-alive";
		proxy_pass http://127.0.0.1:5081/$request_path$is_args$args;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
	
#	index file check
########################################################################
	
	set $location_index "";
	if ($uri ~ ".*/$") {
		set $location_index "${location_index}:1:";
	}
	if (-f "$document_root/${uri}index.html") {
		set $location_index "${location_index}:index.html:";
	}
	if (-f "$document_root/${uri}index.htm") {
		set $location_index "${location_index}:index.htm:";
	}
	if (-f "$document_root/${uri}index.cgi") {
		set $location_index "${location_index}:index.cgi:";
	}
	if (-f "$document_root/${uri}index.php") {
		set $location_index "${location_index}:index.php:";
	}
	if ($location_index ~ "^:1::(?<index>[^:]*):") {
		rewrite ^ "${uri}${index}";
	}
	
#	Git handle
########################################################################
	
	set $git_http_request "";
	
	if ($request_uri = /gitweb){
		rewrite ^/gitweb /gitweb/ permanent;
	}
	
	if ($uri ~ "^/gitweb/.*$") {
		set $git_http_request "${git_http_request}:A:";
	}
	
	#if ($query_string ~ "(HEAD|info/refs|objects/info/.+?|git-(upload|receive)-pack)") {
	#	set $git_http_request "${git_http_request}:B:";
	#}
	
	if ($request_uri ~ "(HEAD|info/refs|objects/info/.+?|git-(upload|receive)-pack)") {
		set $git_http_request "${git_http_request}:B:";
	}
	
	if ($request_uri ~ "git-receive-pack") {
		set $git_http_request "${git_http_request}:SECURE:";
	}
	
	if ($git_http_request = ":A:") {
		rewrite ^/gitweb/(.*)$ /server_function/special_gitweb_handle/$1 last;
	}
	
	if ($git_http_request = ":A::B:") {
		rewrite ^/gitweb/(.*)$ /server_function/special_gitweb_git_http_backend_handle/$1 last;
	}
	
	if ($git_http_request ~ "(:A:|:B:|:SECURE:){3}") {
		rewrite ^/gitweb/(.*)$ /server_function/special_gitweb_git_http_backend_auth_handle/$1 last;
	}
	
	location ~ "^/server_function/special_gitweb_git_http_backend_auth_handle/(?<git_http_backend_request>.*)$" {
		auth_basic "authenticate to push";
		auth_basic_user_file auth/gitweb/htpasswd;
		include uwsgi_params;
		uwsgi_modifier1 9;
		uwsgi_buffering off;
		uwsgi_param REDIRECT_STATUS 200;
		uwsgi_param GIT_PROJECT_ROOT $REALPATH_SERVER_ROOT/gitweb/root;
		uwsgi_param GIT_HTTP_EXPORT_ALL "";
		uwsgi_param SCRIPT_NAME /server_function/special_uwsgi_cgi_bin_mountpoint/git-http-backend;
		uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/git-http-backend/$git_http_backend_request;
		uwsgi_param REMOTE_USER $remote_user;
		uwsgi_pass uwsgi-handler;
	}
	
	location ~ "^/server_function/special_gitweb_git_http_backend_handle/(?<git_http_backend_request>.*)$" {
		include uwsgi_params;
		uwsgi_modifier1 9;
		uwsgi_buffering off;
		uwsgi_param REDIRECT_STATUS 200;
		uwsgi_param GIT_PROJECT_ROOT $REALPATH_SERVER_ROOT/gitweb/root;
		uwsgi_param GIT_HTTP_EXPORT_ALL "";
		uwsgi_param SCRIPT_NAME /server_function/special_uwsgi_cgi_bin_mountpoint/git-http-backend;
		uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/git-http-backend/$git_http_backend_request;
		uwsgi_pass uwsgi-handler;
	}
	
	location ~ "^/server_function/special_gitweb_handle/(?<gitweb_request>.*)$" {
		set $gitweb_request_type ":A:";
		alias "html/gitweb/${gitweb_request}";
		gzip off;
		include uwsgi_params;
		uwsgi_modifier1 9;
		uwsgi_read_timeout 100;
		uwsgi_param GITWEB_CONFIG $REALPATH_SERVER_ROOT/gitweb/gitweb.conf;
		uwsgi_param REALPATH_ROOT $REALPATH_SERVER_ROOT;
		uwsgi_param PERL5LIB $REALPATH_SERVER_ROOT/gitweb/lib;
		uwsgi_param SCRIPT_NAME /gitweb/gitweb.cgi;
		uwsgi_param PATH_INFO /gitweb/gitweb.cgi/$gitweb_request;
		uwsgi_param REQUESTED_HOST $host;
		uwsgi_param HTTPS $USE_HTTPS if_not_empty;
		if ($gitweb_request ~ "^static/") {
			set $gitweb_request_type "${gitweb_request_type}:B:";
		}
		if (-d $document_root) {
			set $gitweb_request_type "${gitweb_request_type}:C:";
		}
		if ($gitweb_request_type ~ "^:A:$|^:A::C:$") {
			uwsgi_pass uwsgi-handler;
		}
		if ($gitweb_request_type = ":A::B::C:") {
			return 403;
		}
	}
	
#	Cgit handle
########################################################################
	
	set $cgit_http_request "";
	
	if ($request_uri = /cgit){
		rewrite ^/cgit /cgit/ permanent;
	}
	
	if ($uri ~ "^/cgit/.*$") {
		set $cgit_http_request "${cgit_http_request}:A:";
	}
	
	if ($request_uri ~ "(HEAD|info/refs|objects/info/.+?|git-(upload|receive)-pack)") {
		set $cgit_http_request "${cgit_http_request}:B:";
	}
	
	if ($request_uri ~ "git-receive-pack") {
		set $cgit_http_request "${cgit_http_request}:SECURE:";
	}
	
	if ($cgit_http_request = ":A:") {
		rewrite ^/cgit/(.*)$ /server_function/special_cgit_handle/$1 last;
	}
	
	if ($cgit_http_request = ":A::B:") {
		rewrite ^/cgit/(.*)$ /server_function/special_cgit_git_http_backend_handle/$1 last;
	}
	
	if ($cgit_http_request ~ "(:A:|:B:|:SECURE:){3}") {
		rewrite ^/cgit/(.*)$ /server_function/special_cgit_git_http_backend_auth_handle/$1 last;
	}
	
	location ~ "^/server_function/special_cgit_git_http_backend_auth_handle/(?<git_http_backend_request>.*)$" {
		auth_basic "authenticate to push";
		auth_basic_user_file auth/cgit/htpasswd;
		include uwsgi_params;
		uwsgi_modifier1 9;
		uwsgi_buffering off;
		uwsgi_param REDIRECT_STATUS 200;
		uwsgi_param GIT_PROJECT_ROOT $REALPATH_SERVER_ROOT/cgit/root;
		uwsgi_param GIT_HTTP_EXPORT_ALL "";
		uwsgi_param SCRIPT_NAME /server_function/special_uwsgi_cgi_bin_mountpoint/git-http-backend;
		uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/git-http-backend/$git_http_backend_request;
		uwsgi_param REMOTE_USER $remote_user;
		uwsgi_pass uwsgi-handler;
	}
	
	location ~ "^/server_function/special_cgit_git_http_backend_handle/(?<git_http_backend_request>.*)$" {
		include uwsgi_params;
		uwsgi_modifier1 9;
		uwsgi_buffering off;
		uwsgi_param REDIRECT_STATUS 200;
		uwsgi_param GIT_PROJECT_ROOT $REALPATH_SERVER_ROOT/cgit/root;
		uwsgi_param GIT_HTTP_EXPORT_ALL "";
		uwsgi_param SCRIPT_NAME /server_function/special_uwsgi_cgi_bin_mountpoint/git-http-backend;
		uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/git-http-backend/$git_http_backend_request;
		uwsgi_pass uwsgi-handler;
	}
	
	location ~ "^/server_function/special_cgit_handle/(?<cgit_request>.*)$" {
		alias html/cgit/$cgit_request;
		include uwsgi_params;
		uwsgi_modifier1 9;
		uwsgi_read_timeout 600;
		uwsgi_send_timeout 600;
		uwsgi_param SCRIPT_NAME /server_function/special_uwsgi_cgi_bin_mountpoint/cgit.cgi;
		uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/cgit.cgi/$cgit_request;
		uwsgi_param SERVER_SCHEME $scheme;
		uwsgi_param SERVER_HOST $host;
		uwsgi_param SERVER_HOST_HEADER $http_host;
		uwsgi_param CGIT_CONFIG $REALPATH_SERVER_ROOT/cgit/cgitrc;
		uwsgi_param CGIT_DIR $REALPATH_SERVER_ROOT/cgit;
		if ($cgit_request !~ "(cgit.css|favicon.ico|cgit.png)") {
			uwsgi_pass uwsgi-handler;
		}
	}
	
#	Mercurial handle
########################################################################
	
	set $hg_http_request "";
	
	if ($uri ~ "^/hgweb/.*$") {
		set $hg_http_request "${hg_http_request}:1:";
	}
	
	#if ($request_uri ~ "cmd=(getbundle|placeholder)") {
	#	set $hg_http_request "${hg_http_request}:1:";
	#}
	
	#if ($hg_http_request = ":1:1:") {
	#	rewrite ^/hgweb/(.*)$ /hgweb/special_request.cgi/$1 last;
	#}
	
	#location ~ "^/hgweb/special_request.cgi/(?<hg_special_request>.*)$" {
	#	alias html/hgweb/special_request.cgi;
	#	include uwsgi_params;
	#	uwsgi_modifier1 9;
	#	uwsgi_param REDIRECT_STATUS 200;
	#	uwsgi_param PATH_INFO /hgweb/special_request.cgi/$hg_special_request;
	#	uwsgi_pass uwsgi-handler;
	#}
	
	
	if ($request_method = "POST") {
		set $hg_http_request "${hg_http_request}:POST:";
	}
	
	if ($hg_http_request = ":1:") {
		rewrite ^/hgweb/(.*)$ /server_function/special_hgweb_handle/$1 last;
	}
	
	if ($hg_http_request = ":1::POST:") {
		rewrite ^/hgweb/(.*)$ /server_function/special_hgweb_post_request_handle/$1 last;
	}
	
	location ~ "^/server_function/special_hgweb_post_request_handle/(?<hg_request>.*)$" {
		auth_basic "authenticate to push";
		auth_basic_user_file auth/hgweb/htpasswd;
		uwsgi_param REMOTE_USER $remote_user;
		#rewrite "^/hg_post_request_special/(.*)$" /hgweb/$1;
		error_page 404 = @hg_post_request_special_redirect;
		log_not_found off;
	}
	
	location @hg_post_request_special_redirect {
		rewrite "^/server_function/special_hgweb_post_request_handle/(.*)$"
		/server_function/special_hgweb_handle/$1;
	}
	
	location ~ "^/server_function/special_hgweb_handle/(?<hg_request>.*)$" {
		include uwsgi_params;
		uwsgi_modifier1 9;
		uwsgi_buffering off;
		uwsgi_param SCRIPT_NAME /hgweb/hgweb.cgi;
		uwsgi_param PATH_INFO /hgweb/hgweb.cgi/$hg_request;
		uwsgi_pass uwsgi-handler;
	}
	
#	Fossil handle
########################################################################
	
	set $fossil_http_request "";
	
	if ($uri ~ "^/fossil/.*$") {
		set $fossil_http_request "${fossil_http_request}:1:";
	}
	
	if ($fossil_http_request = ":1:") {
		rewrite ^/fossil/(.*)$ /server_function/special_fossil_handle/$1 last;
	}
	
	location ~ "^/server_function/special_fossil_handle/(?<fossil_request>.*)$" {
		include scgi_params;
		scgi_buffering off;
		scgi_pass localhost:9003;
		scgi_param PATH_INFO "/$fossil_request";
		scgi_param SCRIPT_NAME "/fossil";
		scgi_param HTTPS $USE_HTTPS if_not_empty;
	}
	
#	Wiki handle
########################################################################
	
	set $wiki_http_request "";
	
	if ($request_uri = /wiki){
		rewrite ^/wiki /wiki/ permanent;
	}
	
	if ($uri ~ "^/wiki/.*$") {
		set $wiki_http_request "${wiki_http_request}:A:";
	}
	
	if ($uri ~ "^/wiki/load\.php.*$") {
		set $wiki_http_request "${wiki_http_request}:B:";
	}
	
	if ($uri ~ "^/wiki/api\.php.*$") {
		set $wiki_http_request "${wiki_http_request}:C:";
	}
	
	if ($uri ~ "^/wiki/_/resources/") {
		set $wiki_http_request "${wiki_http_request}:D:";
	}
	
	if ($uri ~ "^/wiki/_/images/") {
		set $wiki_http_request "${wiki_http_request}:D:";
	}
	
	if ($uri ~ "^/wiki/_/extensions/") {
		set $wiki_http_request "${wiki_http_request}:D:";
	}
	
	if ($wiki_http_request = ":A:") {
		rewrite ^/wiki/(.*)$ /server_function/special_wiki_handle/$1 last;
	}
	
	if ($wiki_http_request = ":A::B:") {
		rewrite ^/wiki/(.*)$ /server_function/special_wiki_load_handle/$1 last;
	}
	
	if ($wiki_http_request = ":A::C:") {
		rewrite ^/wiki/(.*)$ /server_function/special_wiki_api_handle/$1 last;
	}
	
	if ($wiki_http_request = ":A::D:") {
		rewrite ^/wiki/_/(.*)$ /server_function/special_wiki_static_handle/$1 last;
	}
	
	location ~ "^/server_function/special_wiki_load_handle/(?<wiki_request>.*)$" {
		set $wiki_script_path "/wiki";
		if ($host ~ "^wiki\..*") {
			set $wiki_script_path "";
		}
		include fastcgi_params;
		fastcgi_param DOCUMENT_URI /wiki/$wiki_request;
		fastcgi_param SCRIPT_NAME /wiki/load.php/;
		fastcgi_param PATH_INFO $wiki_request;
		fastcgi_param SCRIPT_FILENAME $REALPATH_SERVER_ROOT/apps/mediawiki/load.php;
		fastcgi_param WIKI_SCRIPT_PATH $wiki_script_path;
		fastcgi_pass php-handler;
	}
	
	location ~ "^/server_function/special_wiki_api_handle/(?<wiki_request>.*)$" {
		set $wiki_script_path "/wiki";
		if ($host ~ "^wiki\..*") {
			set $wiki_script_path "";
		}
		include fastcgi_params;
		fastcgi_param DOCUMENT_URI /wiki/$wiki_request;
		fastcgi_param SCRIPT_NAME /wiki/api.php/;
		fastcgi_param PATH_INFO $wiki_request;
		fastcgi_param SCRIPT_FILENAME $REALPATH_SERVER_ROOT/apps/mediawiki/api.php;
		fastcgi_param WIKI_SCRIPT_PATH $wiki_script_path;
		fastcgi_pass php-handler;
	}
	
	location ~ "^/server_function/special_wiki_static_handle/(?<wiki_request>.*)$" {
		alias "html/apps/mediawiki/${wiki_request}";
		if (-d $document_root) {
			return 403;
		}
	}
	
	location ~ "^/server_function/special_wiki_handle/(?<wiki_request>.*)$" {
		set $wiki_script_path "/wiki";
		if ($host ~ "^wiki\..*") {
			set $wiki_script_path "";
		}
		include fastcgi_params;
		fastcgi_param REDIRECT_STATUS 200;
		fastcgi_param DOCUMENT_URI /wiki/$wiki_request;
		fastcgi_param SCRIPT_NAME /wiki/index.php/;
		fastcgi_param PATH_INFO $wiki_request;
		fastcgi_param SCRIPT_FILENAME $REALPATH_SERVER_ROOT/apps/mediawiki/index.php;
		fastcgi_param WIKI_SCRIPT_PATH $wiki_script_path;
		fastcgi_pass php-handler;
	}
	
#	PHP handle
########################################################################
	
	set $php_match_handle "";
	
	if ($uri ~ "^(.+?\.php)(/.*)?$") {
		set $php_match_handle "${php_match_handle}:1:";
	}
	
	if ($uri ~ "^/server_function/.*$") {
		set $php_match_handle "${php_match_handle}:0:";
	}
	
	if ($php_match_handle = ":1:") {
		rewrite ^/(.*)$ /server_function/PHP-SCRIPT-HANDLE-LOCATION/$1 last;
	}
	
	location ~ ^/server_function/PHP-SCRIPT-HANDLE-LOCATION/(?<php_request>.*)$ {
		if ($php_request ~* "^(.+?\.php)(/.*)?$") {
			set $script_filename $1;
			set $path_info $2;
		}
		root html;
		fastcgi_buffering off;
		include fastcgi_params;
		fastcgi_param REDIRECT_STATUS 200;
		fastcgi_param DOCUMENT_URI /$php_request;
		fastcgi_param SCRIPT_NAME /$script_filename;
		fastcgi_param PATH_INFO $path_info;
		fastcgi_param SCRIPT_FILENAME $document_root/$script_filename;
		if (-e $document_root/$script_filename) {
			fastcgi_pass php-handler;
		}
	}
	
#	CGI handle
########################################################################
	
	set $cgi_match_handle "";
	
	if ($uri ~ "^(.+?\.cgi)(/.*)?$") {
		set $cgi_match_handle "${cgi_match_handle}:1:";
	}
	
	if ($uri ~ "^/server_function/.*$") {
		set $cgi_match_handle "${cgi_match_handle}:0:";
	}
	
	if ($cgi_match_handle = ":1:") {
		rewrite ^/(.*)$ /server_function/CGI-SCRIPT-HANDLE-LOCATION/$1 last;
	}
	
	location ~ ^/server_function/CGI-SCRIPT-HANDLE-LOCATION/(?<cgi_request>.*)$ {
		if ($cgi_request ~* "^(.+?\.cgi)(/.*)?$") {
			set $script_filename $1;
			set $path_info $2;
		}
		root html;
		include uwsgi_params;
		uwsgi_modifier1 9;
		uwsgi_buffering off;
		uwsgi_param REDIRECT_STATUS 200;
		uwsgi_param PATH_INFO /$script_filename$path_info;
		uwsgi_param SCRIPT_NAME /$script_filename;
		uwsgi_param SERVER_HOST $host;
		if (-e $document_root/$script_filename) {
			uwsgi_pass uwsgi-handler;
		}
	}
	
#	miscellaneous location rules
########################################################################
	
	#rainloop
	location ^~ /rainloop/data {
		deny all;
	}
	location ~ "^/rainloop/(?<rainloop_request>.*)$" {
		alias "html/apps/rainloop/${rainloop_request}";
		include fastcgi_params;
		fastcgi_param PATH_INFO $rainloop_request;
		fastcgi_param SCRIPT_FILENAME $REALPATH_SERVER_ROOT/apps/rainloop/index.php;
		if ($rainloop_request !~ "^rainloop/") {
			fastcgi_pass php-handler;
		}
	}
	
	#termbin
	location ~ "^/termbin/(?<termbin_request>.*)$" {
		alias "html/termbin/${termbin_request}";
		charset utf-8;
		try_files /index.txt /index.html =404;
		index index.txt index.html;
	}
	
#	extra examples/unused things for first server block
########################################################################
	
	#error_page  404              /404.html;
	
	## redirect server error pages to the static page /50x.html
	
	#error_page   500 502 503 504  /50x.html;
	#location = /50x.html {
	#	root   html;
	#}
	
	## proxy the PHP scripts to Apache listening on 127.0.0.1:80
	
	#location ~ \.php$ {
	#	proxy_pass   http://127.0.0.1;
	#}
	
	## pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	
	#location ~ \.php$ {
	#	root           html;
	#	fastcgi_pass   127.0.0.1:9000;
	#	fastcgi_index  index.php;
	#	fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
	#	include        fastcgi_params;
	#}
	
	## deny access to .htaccess files, if Apache's document root
	## concurs with nginx's one
	
	#location ~ /\.ht {
	#	deny  all;
	#}
	
#	index files using php
########################################################################
	
	set $index_public_files "";
	
	if ($uri ~ "^/public/(.*)$") {
		set $index_public_files "${index_public_files}:1:";
	}
	
	if (-d $document_root/$uri) {
		set $index_public_files "${index_public_files}:1:";
	}
	
	if ($uri !~ ".*/$") {
		set $index_public_files "${index_public_files}:REDIR:";
	}
	
	if ($index_public_files = ":1::1::REDIR:") {
		rewrite "^/(?!server_function/)(.*)$" "/$1/" permanent;
	}
	
	if ($index_public_files = ":1::1:") {
		rewrite "^/(?!server_function/)(.*)$" "/server_function/index_files/$1";
	}
	
	location ~ "/server_function/index_files/(?<request_path>.*)" {
		root html;
		include fastcgi_params;
		fastcgi_param PATH_INFO /$request_path;
		fastcgi_param PATH_ROOT $REALPATH_SERVER_ROOT;
		fastcgi_param SCRIPT_FILENAME $REALPATH_SERVER_ROOT/apps/build_index.php;
		fastcgi_pass php-handler;
	}
	
} ### END OF MASTER SERVER BLOCK
