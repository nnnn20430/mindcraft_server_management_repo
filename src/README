Extract nginx, php, uwsgi archives to new seprate folders.

Get build essentials.

# apt-get install build-essential python python-dev
# pacman -S base-devel python python-dev

For nginx:
cd into nginx and execute:
$ ./configure --with-http_ssl_module --with-ipv6 \
  --with-http_v2_module \
  --with-http_realip_module \
  --with-http_addition_module \
  --with-http_sub_module \
  --with-http_dav_module \
  --with-http_gunzip_module \
  --with-http_slice_module \
  --with-stream \
  --with-stream_ssl_module
$ make

cd into "objs" and copy nginx binary and ngx_modules.o

for php:
cd into php and execute:
$ ./configure --with-openssl --enable-sockets --enable-bcmath --with-gd
$ make

for openbay to work you need to configure it using this command:
$ ./configure --enable-zip --enable-sockets --enable-bcmath --enable-ftp --enable-mbstring --with-openssl --with-gd --with-curl --with-zlib --with-mysql --with-pdo-mysql

current configure command for php:
$ ./configure --enable-zip \
  --enable-sockets \
  --enable-bcmath \
  --enable-ftp \
  --enable-mbstring \
  --with-openssl \
  --with-gd \
  --with-curl \
  --with-zlib \
  --with-mysql=mysqlnd \
  --with-mysqli=mysqlnd \
  --with-pdo-mysql=mysqlnd \
  --enable-pcntl \
  --enable-opcache \
  --enable-intl \
  --enable-fpm \
  --with-gmp

cd into sapi/cgi and copy php-cgi binary

for uwsgi:
cd into uwsgi and execute:
$ python uwsgiconfig.py --build cgi
or
$ make PROFILE=cgi

copy uwsgi binary from project root directory
