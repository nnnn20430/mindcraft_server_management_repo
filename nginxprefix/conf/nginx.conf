#user nobody;
user root;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log /dev/null;

pid logs/nginx.pid;


events {
	worker_connections  1024;
}


http {
	include       mime.types;
	default_type  application/octet-stream;
	
	#log_format main	'$remote_addr - $remote_user [$time_local] "$request" '
	#					'$status $body_bytes_sent "$http_referer" '
	#					'"$http_user_agent" "$http_x_forwarded_for"';
	
	#access_log  logs/access.log  main;
	access_log off;
	#access_log logs/access.log combined buffer=10240k flush=60m;
	#access_log  logs/access.log combined;
	
	sendfile        on;
	#tcp_nopush     on;
	
	#keepalive_timeout  0;
	keepalive_timeout  65;
	
	#gzip  on;
	
	client_max_body_size 0;
	
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}
	
	map "" $NGINX_PREFIX {default "./nginxprefix";}
	
	map $document_root $root_directive_value {
		"~\/nginxprefix\/(?<path>.*)$" "$path";
	}
	
	upstream php-handler {
		#server 127.0.0.1:9000;
		#server unix:/var/run/php5-fpm.sock;
		server unix:./nginxprefix/handlers/php-fastcgi;
	}
	
	upstream uwsgi-handler {
		server unix:./nginxprefix/handlers/uwsgi;
	}
	
	server {
		listen unix:./nginxprefix/servers/master;
		listen 0.0.0.0:80;
		listen [::]:80;
		
		#ssl
		listen 0.0.0.0:443 ssl;
		listen [::]:443 ssl;
		ssl_certificate server.crt;
		ssl_certificate_key server.key;
		ssl_dhparam dhparam.pem;
		set $redirect_to_https "";
		if ($scheme = "http") {
			set $redirect_to_https "${redirect_to_https}:1:";
		}
		if ($http_nginx_loopback = "true") {
			set $redirect_to_https "${redirect_to_https}:0:";
		}
		if ($host = "mindcraftn5xddk4.onion") {
			set $redirect_to_https "${redirect_to_https}:0:";
		}
		if ($redirect_to_https = ":1:") {
			rewrite ^ https://$host$request_uri? permanent;
		}
		
		
		server_name "";
		server_name_in_redirect off;
		port_in_redirect off;
		
		#charset koi8-r;
		
		#access_log  logs/host.access.log  main;
		
		add_header Access-Control-Allow-Origin $http_origin;
		
		root "html";
		if ($realpath_root ~ "(.*)(?=\/)") {
			set $REALPATH_NGINXPREFIX $1;
			set $REALPATH_SERVER_ROOT "${REALPATH_NGINXPREFIX}/html";
		}
		location / {
			root html;
			index index.html index.htm index.cgi index.php;
			autoindex on;
			try_files $uri $uri/ $uri.html =404;
		}
		
		location /server_function/ {
			internal;
		}
		
#	forbidden locations
########################################################################
		
		location ~ "^/test3/.*/$" {
			return 403;
		}
		
		if ($request_uri ~ "^/build_index.php") {
			return 403;
		}
		
#	subdomain redirects
########################################################################
		
		if ($host ~ "^git.*") {
			rewrite "^/(?!gitweb)(.*)$" "/gitweb/$1";
		}
		
		if ($host ~ "^hg.*") {
			rewrite "^/(?!hgweb)(.*)$" "/hgweb/$1";
		}
		
		if ($host ~ "^code.*") {
			rewrite "^/(?!cgit)(.*)$" "/cgit/$1";
		}
		
		if ($host ~ "^fossil.*") {
			rewrite "^/(?!fossil)(.*)$" "/fossil/$1";
		}
		
#	Git handle
########################################################################
		
		set $git_http_request "";
		
		if ($request_uri = /gitweb){
			rewrite ^/gitweb /gitweb/ permanent;
		}
		
		if ($uri ~ "^/gitweb/.*$") {
			set $git_http_request "${git_http_request}:A:";
		}
		
		#if ($query_string ~ "(HEAD|info/refs|objects/info/.+?|git-(upload|receive)-pack)") {
		#	set $git_http_request "${git_http_request}:B:";
		#}
		
		if ($request_uri ~ "(HEAD|info/refs|objects/info/.+?|git-(upload|receive)-pack)") {
			set $git_http_request "${git_http_request}:B:";
		}
		
		if ($request_uri ~ "git-receive-pack") {
			set $git_http_request "${git_http_request}:SECURE:";
		}
		
		if ($git_http_request = ":A:") {
			rewrite ^/gitweb/(.*)$ /server_function/special_gitweb_handle/$1;
		}
		
		if ($git_http_request = ":A::B:") {
			rewrite ^/gitweb/(.*)$ /server_function/special_gitweb_git_http_backend_handle/$1;
		}
		
		if ($git_http_request ~ "(:A:|:B:|:SECURE:){3}") {
			rewrite ^/gitweb/(.*)$ /server_function/special_gitweb_git_http_backend_auth_handle/$1;
		}
		
		location ~ "^/server_function/special_gitweb_git_http_backend_auth_handle/(?<git_http_backend_request>.*)$" {
			auth_basic "authenticate to push";
			auth_basic_user_file htpasswd;
			include uwsgi_params;
			uwsgi_param REDIRECT_STATUS 200; # required by php 5.3;
			uwsgi_modifier1 9;
			uwsgi_param GIT_PROJECT_ROOT $REALPATH_SERVER_ROOT/gitweb/root;
			uwsgi_param GIT_HTTP_EXPORT_ALL "";
			uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/git/git-http-backend/$git_http_backend_request;
			uwsgi_param REMOTE_USER $remote_user;
			uwsgi_pass uwsgi-handler;
		}
		
		location ~ "^/server_function/special_gitweb_git_http_backend_handle/(?<git_http_backend_request>.*)$" {
			include uwsgi_params;
			uwsgi_param REDIRECT_STATUS 200; # required by php 5.3;
			uwsgi_modifier1 9;
			uwsgi_param GIT_PROJECT_ROOT $REALPATH_SERVER_ROOT/gitweb/root;
			uwsgi_param GIT_HTTP_EXPORT_ALL "";
			uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/git/git-http-backend/$git_http_backend_request;
			uwsgi_pass uwsgi-handler;
		}
		
		location ~ "^/server_function/special_gitweb_handle/(?<gitweb_request>.*)$" {
			alias html/gitweb/$gitweb_request;
			autoindex on;
			index gitweb.cgi;
			include uwsgi_params;
			uwsgi_param REDIRECT_STATUS 200; # required by php 5.3
			uwsgi_modifier1 9;
			gzip off;
			uwsgi_read_timeout 100;
			uwsgi_param GITWEB_CONFIG $REALPATH_SERVER_ROOT/gitweb/gitweb.conf;
			uwsgi_param REALPATH_ROOT $REALPATH_SERVER_ROOT;
			uwsgi_param PATH_INFO /gitweb/gitweb.cgi/$gitweb_request;
			uwsgi_param REQUESTED_HOST $host;
			if ($gitweb_request !~ "^static/") {
				uwsgi_pass uwsgi-handler;
			}
		}
		
#	Cgit handle
########################################################################
		
		set $cgit_http_request "";
		
		if ($request_uri = /cgit){
			rewrite ^/cgit /cgit/ permanent;
		}
		
		if ($uri ~ "^/cgit/.*$") {
			set $cgit_http_request "${cgit_http_request}:A:";
		}
		
		if ($request_uri ~ "(HEAD|info/refs|objects/info/.+?|git-(upload|receive)-pack)") {
			set $cgit_http_request "${cgit_http_request}:B:";
		}
		
		if ($request_uri ~ "git-receive-pack") {
			set $cgit_http_request "${cgit_http_request}:SECURE:";
		}
		
		if ($cgit_http_request = ":A:") {
			rewrite ^/cgit/(.*)$ /server_function/special_cgit_handle/$1;
		}
		
		if ($cgit_http_request = ":A::B:") {
			rewrite ^/cgit/(.*)$ /server_function/special_cgit_git_http_backend_handle/$1;
		}
		
		if ($cgit_http_request ~ "(:A:|:B:|:SECURE:){3}") {
			rewrite ^/cgit/(.*)$ /server_function/special_cgit_git_http_backend_auth_handle/$1;
		}
		
		location ~ "^/server_function/special_cgit_git_http_backend_auth_handle/(?<git_http_backend_request>.*)$" {
			auth_basic "authenticate to push";
			auth_basic_user_file htpasswd;
			include uwsgi_params;
			uwsgi_param REDIRECT_STATUS 200; # required by php 5.3;
			uwsgi_modifier1 9;
			uwsgi_param GIT_PROJECT_ROOT $REALPATH_SERVER_ROOT/cgit/root;
			uwsgi_param GIT_HTTP_EXPORT_ALL "";
			uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/git/git-http-backend/$git_http_backend_request;
			uwsgi_param REMOTE_USER $remote_user;
			uwsgi_pass uwsgi-handler;
		}
		
		location ~ "^/server_function/special_cgit_git_http_backend_handle/(?<git_http_backend_request>.*)$" {
			include uwsgi_params;
			uwsgi_param REDIRECT_STATUS 200; # required by php 5.3;
			uwsgi_modifier1 9;
			uwsgi_param GIT_PROJECT_ROOT $REALPATH_SERVER_ROOT/cgit/root;
			uwsgi_param GIT_HTTP_EXPORT_ALL "";
			uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/git/git-http-backend/$git_http_backend_request;
			uwsgi_pass uwsgi-handler;
		}
		
		location ~ "^/server_function/special_cgit_handle/(?<cgit_request>.*)$" {
			alias html/cgit/$cgit_request;
			include uwsgi_params;
			uwsgi_param REDIRECT_STATUS 200; # required by php 5.3
			uwsgi_modifier1 9;
			uwsgi_read_timeout 600;
			uwsgi_send_timeout 600;
			uwsgi_param PATH_INFO /server_function/special_uwsgi_cgi_bin_mountpoint/cgit/cgit.cgi/$cgit_request;
			uwsgi_param SERVER_SCHEME $scheme;
			uwsgi_param SERVER_HOST $host;
			uwsgi_param SERVER_HOST_HEADER $http_host;
			uwsgi_param CGIT_CONFIG $REALPATH_SERVER_ROOT/cgit/cgitrc;
			uwsgi_param CGIT_DIR $REALPATH_SERVER_ROOT/cgit;
			if ($cgit_request !~ "(cgit.css|favicon.ico|cgit.png)") {
				uwsgi_pass uwsgi-handler;
			}
		}
		
#	Mercurial handle
########################################################################
		
		set $hg_http_request "";
		
		if ($uri ~ "^/hgweb/.*$") {
			set $hg_http_request "${hg_http_request}:1:";
		}
		
		#if ($request_uri ~ "cmd=(getbundle|placeholder)") {
		#	set $hg_http_request "${hg_http_request}:1:";
		#}
		
		#if ($hg_http_request = ":1:1:") {
		#	rewrite ^/hgweb/(.*)$ /hgweb/special_request.cgi/$1 last;
		#}
		
		#location ~ "^/hgweb/special_request.cgi/(?<hg_special_request>.*)$" {
		#	alias html/hgweb/special_request.cgi;
		#	include uwsgi_params;
		#	#uwsgi_param REDIRECT_STATUS 200; # required by php 5.3
		#	uwsgi_modifier1 9;
		#	uwsgi_param PATH_INFO /hgweb/special_request.cgi/$hg_special_request;
		#	uwsgi_pass uwsgi-handler;
		#}
		
		
		if ($request_method = "POST") {
			set $hg_http_request "${hg_http_request}:POST:";
		}
		
		if ($hg_http_request = ":1:") {
			rewrite ^/hgweb/(.*)$ /server_function/special_hgweb_handle/$1 last;
		}
		
		if ($hg_http_request = ":1::POST:") {
			rewrite ^/hgweb/(.*)$ /server_function/special_hgweb_post_request_handle/$1 last;
		}
		
		location ~ "^/server_function/special_hgweb_post_request_handle/(?<hg_request>.*)$" {
			auth_basic "authenticate to push";
			auth_basic_user_file htpasswd;
			uwsgi_param REMOTE_USER $remote_user;
			#rewrite "^/hg_post_request_special/(.*)$" /hgweb/$1;
			error_page 404 = @hg_post_request_special_redirect;
			log_not_found off;
		}
		
		location @hg_post_request_special_redirect {
			rewrite "^/server_function/special_hgweb_post_request_handle/(.*)$"
			/server_function/special_hgweb_handle/$1;
		}
		
		location ~ "^/server_function/special_hgweb_handle/(?<hg_request>.*)$" {
			alias html/hgweb/hgweb.cgi;
			include uwsgi_params;
			#uwsgi_param REDIRECT_STATUS 200; # required by php 5.3
			uwsgi_modifier1 9;
			uwsgi_param PATH_INFO /hgweb/hgweb.cgi/$hg_request;
			uwsgi_pass uwsgi-handler;
		}
		
#	Fossil handle
########################################################################
		
		set $fossil_http_request "";
		
		if ($uri ~ "^/fossil/.*$") {
			set $fossil_http_request "${fossil_http_request}:1:";
		}
		
		if ($fossil_http_request = ":1:") {
			rewrite ^/fossil/(.*)$ /server_function/special_fossil_handle/$1 last;
		}
		
		location ~ "^/server_function/special_fossil_handle/(?<fossil_request>.*)$" {
			include scgi_params;
			scgi_pass localhost:9003;
			scgi_param PATH_INFO "/$fossil_request";
			scgi_param SCRIPT_NAME "/fossil";
		}
		
#	PHP handle
########################################################################
		
		set $php_match_handle "";
		
		if ($uri ~ "^(.+?\.php)(/.*)?$") {
			set $php_match_handle "${php_match_handle}:1:";
		}
		
		if ($uri ~ "^/server_function/.*$") {
			set $php_match_handle "${php_match_handle}:0:";
		}
		
		if ($php_match_handle = ":1:") {
			rewrite ^/(.*)$ /server_function/PHP-SCRIPT-HANDLE-LOCATION/$1 last;
		}
		
		location ~ ^/server_function/PHP-SCRIPT-HANDLE-LOCATION/(?<php_request>.*)$ {
			if ($php_request ~* "^(.+?\.php)(/.*)?$") {
				set $script_filename $1;
				set $path_info $2;
			}
			root html;
			fastcgi_index index.php;
			include fastcgi_params;
			
			fastcgi_param DOCUMENT_URI /$php_request;
			fastcgi_param SCRIPT_NAME /$php_request;
			
			fastcgi_param PATH_INFO $path_info;
			fastcgi_param SCRIPT_FILENAME $document_root/$script_filename;
			if (-e $document_root/$script_filename) {
				fastcgi_pass php-handler;
			}
		}
		
		#location ~ "^(.+?\.php)(/.*)?$" {
		#	root html;
		#	try_files $1 = 404;
		#	fastcgi_index index.php;
		#	include fastcgi_params;
		#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
		#	fastcgi_param PATH_INFO $fastcgi_path_info;
		#	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		#	fastcgi_pass php-handler;
		#}
		
		#location ~ \.php$ {
		#	include uwsgi_params;
		#	uwsgi_param REDIRECT_STATUS 200; # required by php 5.3
		#	uwsgi_modifier1 9;
		#	uwsgi_pass uwsgi-handler;
		#}
		
#	cgi handle
########################################################################
		
		set $cgi_match_handle "";
		
		if ($uri ~ "^(.+?\.cgi)(/.*)?$") {
			set $cgi_match_handle "${cgi_match_handle}:1:";
		}
		
		if ($uri ~ "^/server_function/.*$") {
			set $cgi_match_handle "${cgi_match_handle}:0:";
		}
		
		if ($cgi_match_handle = ":1:") {
			rewrite ^/(.*)$ /server_function/CGI-SCRIPT-HANDLE-LOCATION/$1 last;
		}
		
		location ~ ^/server_function/CGI-SCRIPT-HANDLE-LOCATION/(?<cgi_request>.*)$ {
			if ($cgi_request ~* "^(.+?\.cgi)(/.*)?$") {
				set $script_filename $1;
				set $path_info $2;
			}
			root html;
			include uwsgi_params;
			uwsgi_param REDIRECT_STATUS 200; # required by php 5.3
			uwsgi_modifier1 9;
			uwsgi_param PATH_INFO /$script_filename$path_info;
			uwsgi_param SCRIPT_NAME /$script_filename;
			uwsgi_param SERVER_HOST $host;
			if (-e $document_root/$script_filename) {
				uwsgi_pass uwsgi-handler;
			}
		}
		
#	apache domain proxy handle
########################################################################
		
		if ($host ~ "^apache.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_apache_domain_handle/$1" last;
		}
		
		location ~ "/server_function/special_apache_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_apache_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://192.168.1.144:80/$request_path$is_args$args;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
		
		
#	subdomain proxies
########################################################################
		
		if ($host ~ "^tracker.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_tracker_domain_handle/$1" last;
		}
		
		if ($host ~ "^tf2.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_tf2_domain_handle/$1" last;
		}
		
		if ($host ~ "^radio.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_radio_domain_handle/$1" last;
		}
		
		if ($host ~ "^citadel.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_citadel_domain_handle/$1" last;
		}
		
		if ($host ~ "^znc.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_znc_domain_handle/$1" last;
		}
		
		if ($host ~ "^kiwi.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_kiwi_domain_handle/$1" last;
		}
		
		location ~ "/server_function/special_tracker_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_tracker_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://127.0.0.1:6969/$request_path$is_args$args;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
		
		location ~ "/server_function/special_tf2_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_tf2_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://192.168.1.144:80/$request_path$is_args$args;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
		
		location ~ "/server_function/special_radio_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_radio_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://127.0.0.1:8000/$request_path$is_args$args;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
		
		location ~ "/server_function/special_citadel_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_citadel_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://127.0.0.1:2000/$request_path$is_args$args;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
		
		location ~ "/server_function/special_znc_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_znc_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://127.0.0.1:7781/$request_path$is_args$args;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
		
		location ~ "/server_function/special_kiwi_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_kiwi_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://127.0.0.1:7778/$request_path$is_args$args;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
		
		
#	domain redirects/proxies
########################################################################
		
		if ($host ~ "^pony.eu.org$") {
			rewrite "^/(?!pony_site)(.*)$" "/pony_site/$1" last;
		}
		
		if ($host ~ "^minecubed.eu.org$") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_minecubed.eu.org_domain_handle/$1" last;
		}
		
		location ~ "/server_function/special_minecubed.eu.org_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_minecubed.eu.org_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://127.0.0.1:5081/$request_path$is_args$args;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
		
#	extra examples/unused things for first server block
########################################################################
		
		#error_page  404              /404.html;
		
		## redirect server error pages to the static page /50x.html
		
		#error_page   500 502 503 504  /50x.html;
		#location = /50x.html {
		#	root   html;
		#}
		
		## proxy the PHP scripts to Apache listening on 127.0.0.1:80
		
		#location ~ \.php$ {
		#	proxy_pass   http://127.0.0.1;
		#}
		
		## pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		
		#location ~ \.php$ {
		#	root           html;
		#	fastcgi_pass   127.0.0.1:9000;
		#	fastcgi_index  index.php;
		#	fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		#	include        fastcgi_params;
		#}
		
		## deny access to .htaccess files, if Apache's document root
		## concurs with nginx's one
		
		#location ~ /\.ht {
		#	deny  all;
		#}
		
#	index files using php
########################################################################
		set $index_public_files "";
		
		if ($uri ~ "^/public/(.*)$") {
			set $index_public_files "${index_public_files}:1:";
		}
		
		if (-f $document_root/$uri) {
			set $index_public_files "${index_public_files}:0:";
		}
		
		if (-f $document_root/$uri/has_index) {
			set $index_public_files "${index_public_files}:0:";
		}
		
		if ($index_public_files = ":1:") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/index_files/$1";
		}
		
		location ~ "/server_function/index_files/(?<request_path>.*)" {
			root html;
			fastcgi_index index.php;
			include fastcgi_params;
			fastcgi_param PATH_INFO $request_path;
			fastcgi_param PATH_ROOT $REALPATH_SERVER_ROOT;
			fastcgi_param SCRIPT_FILENAME $REALPATH_SERVER_ROOT/build_index.php;
			fastcgi_pass php-handler;
		}
	}
	
#	extra example/unused server blocks
########################################################################
	
	
	# another virtual host using mix of IP-, name-, and port-based configuration
	#
	#server {
	#	listen       8000;
	#	listen       somename:8080;
	#	server_name  somename  alias  another.alias;
	
	#	location / {
			root   html;
	#		index  index.html index.htm;
	#	}
	#}
	
	
	# HTTPS server
	#
	#server {
	#	listen       443 ssl;
	#	server_name  localhost;
	
	#	ssl_certificate      cert.pem;
	#	ssl_certificate_key  cert.key;
	
	#	ssl_session_cache    shared:SSL:1m;
	#	ssl_session_timeout  5m;
	
	#	ssl_ciphers  HIGH:!aNULL:!MD5;
	#	ssl_prefer_server_ciphers  on;
	
	#	location / {
	#		root   html;
	#		index  index.html index.htm;
	#	}
	#}
	
#	plfgr.eu.org
########################################################################
	
	server {
		listen 443 ssl;
		server_name plfgr.eu.org *.plfgr.eu.org;
		
		ssl_certificate letsencrypt/plfgr.eu.org/fullchain.pem;
		ssl_certificate_key letsencrypt/plfgr.eu.org/privkey.pem;
		ssl_dhparam dhparam.pem;
		
		location / {
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://unix:./nginxprefix/servers/master:/;
			proxy_set_header Nginx-Loopback true;
			proxy_read_timeout 999999;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto "https";
		}
		
		if ($host ~ "^phab.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_phab_domain_handle/$1" last;
		}
		
		location ~ "/server_function/special_phab_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_phab_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://unix:./nginxprefix/servers/phabricator:/$request_path$is_args$args;
			proxy_set_header Nginx-Loopback true;
			proxy_read_timeout 999999;
			proxy_set_header Host $host:$server_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto "https";
			#for ws
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
		}
		
		if ($host ~ "^cloud.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_cloud_domain_handle/$1" last;
		}
		
		location ~ "/server_function/special_cloud_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_cloud_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://unix:./nginxprefix/servers/ownCloud:/$request_path$is_args$args;
			proxy_set_header Nginx-Loopback true;
			proxy_read_timeout 999999;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto "https";
			
		}
		
		if ($host ~ "^social.*") {
			rewrite "^/(?!server_function)(.*)$" "/server_function/special_social_domain_handle/$1" last;
		}
		
		location ~ "/server_function/special_social_domain_handle/(.*)" {
			if ($uri ~* "^/server_function/special_social_domain_handle/(.*)$") {
				set $request_path $1;
			}
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://unix:./nginxprefix/servers/gnusocial:/$request_path$is_args$args;
			proxy_set_header Nginx-Loopback true;
			proxy_read_timeout 999999;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto "https";
		}
		
	}
	
#	ownCloud
########################################################################
	
	upstream ownCloud-php-handler {
		server 192.168.1.144:9000 down;
		server 127.0.0.1:9000 backup;
	}
	
	server {
		listen unix:./nginxprefix/servers/ownCloud;
		
		#listen 443 ssl;
		#ssl_certificate server.crt;
		#ssl_certificate_key server.key;
		
		server_name cloud.*;
		
		# Add headers to serve security related headers
		add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
		add_header X-Content-Type-Options nosniff;
		add_header X-Frame-Options "SAMEORIGIN";
		add_header X-XSS-Protection "1; mode=block";
		add_header X-Robots-Tag none;
		
		# Path to the root of your installation
		root "html/ownCloud";
		# set max upload size
		client_max_body_size 10G;
		fastcgi_buffers 64 4K;
		
		# Disable gzip to avoid the removal of the ETag header
		gzip off;
		
		# Uncomment if your server is build with the ngx_pagespeed module
		# This module is currently not supported.
		#pagespeed off;
		
		index index.php;
		error_page 403 /core/templates/403.php;
		error_page 404 /core/templates/404.php;
		
		rewrite ^/.well-known/carddav /remote.php/carddav/ permanent;
		rewrite ^/.well-known/caldav /remote.php/caldav/ permanent;
		
		# The following 2 rules are only needed for the user_webfinger app.
		# Uncomment it if you're planning to use this app.
		#rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
		#rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;
		
		location = /robots.txt {
			allow all;
			log_not_found off;
			access_log off;
		}
		
		location ~ ^/(build|tests|config|lib|3rdparty|templates|data)/ {
			deny all;
		}
		
		location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
			deny all;
		}
		
		location / {
			rewrite ^/remote/(.*) /remote.php last;
			rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;
			try_files $uri $uri/ /index.php;
		}
		
		location ~ \.php(?:$|/) {
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			include fastcgi_params;
			fastcgi_param SCRIPT_FILENAME $NGINX_PREFIX/$root_directive_value$fastcgi_script_name;
			fastcgi_param PATH_INFO $fastcgi_path_info;
			fastcgi_param HTTPS on;
			fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
			fastcgi_pass ownCloud-php-handler;
			fastcgi_intercept_errors on;
		}
		
		# Adding the cache control header for js and css files
		# Make sure it is BELOW the location ~ \.php(?:$|/) { block
		location ~* \.(?:css|js)$ {
			add_header Cache-Control "public, max-age=7200";
			# Add headers to serve security related headers
			add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
			add_header X-Content-Type-Options nosniff;
			add_header X-Frame-Options "SAMEORIGIN";
			add_header X-XSS-Protection "1; mode=block";
			add_header X-Robots-Tag none;
			# Optional: Don't log access to assets
			access_log off;
		}
		
		# Optional: Don't log access to other assets
		location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|swf)$ {
			access_log off;
		}
	}
	
#	phabricator
########################################################################
	
	server {
		listen unix:./nginxprefix/servers/phabricator;
		#listen 443 ssl;
		#ssl_certificate server.crt;
		#ssl_certificate_key server.key;
		
		server_name phabricator.* phab.*;
		root        html/phabricator/phabricator/webroot;
		
		location / {
			index index.php;
			rewrite ^/(.*)$ /index.php?__path__=/$1 last;
		}
		
		location = /favicon.ico {
			try_files $uri =204;
		}
		
		location /index.php {
			#fastcgi_pass   localhost:9000;
			fastcgi_pass    php-handler;
			fastcgi_index   index.php;
			
			include fastcgi_params;
			
			#required if PHP was built with --enable-force-cgi-redirect
			fastcgi_param  REDIRECT_STATUS    200;
			
			#variables to make the $_SERVER populate in PHP
			fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
			fastcgi_param  QUERY_STRING       $query_string;
			fastcgi_param  REQUEST_METHOD     $request_method;
			fastcgi_param  CONTENT_TYPE       $content_type;
			fastcgi_param  CONTENT_LENGTH     $content_length;
			
			fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
			
			fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
			fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;
			
			fastcgi_param  REMOTE_ADDR        $remote_addr;
			
			#https
			set $isHTTPS $https;
			if ($http_x_forwarded_proto = "https") {
				set $isHTTPS "on";
			}
			fastcgi_param  HTTPS              $isHTTPS if_not_empty;
			
			fastcgi_read_timeout 180;
		}
		
		location = /ws/ {
			proxy_pass http://127.0.0.1:22280;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_read_timeout 999999;
		}
	}
	
#	GNU social
########################################################################
	
	upstream GNUsocial-php-handler {
		server 192.168.1.144:9000 down;
		server 127.0.0.1:9000 backup;
	}
	
	server {
		listen unix:./nginxprefix/servers/gnusocial;
		# Ports
		#listen 80;
		# Uncomment the following line
		# to enable HTTPS
		#listen 443 ssl;
		
		# Server name
		# Change "example.org" to your domain name
		server_name social.*;
		
		# SSL
		# Uncomment and change the paths to setup
		# your SSL key/cert. See https://cipherli.st/
		# for more information
		#ssl_certificate       server.crt;
		#ssl_certificate_key   server.key;
		
		# Logs
		# Uncomment and change the paths to setup
		# logging
		#access_log /path/to/access.log;
		#error_log  /path/to/error.log;
		
		# Root
		# Change the path below to where you installed
		# GNU social
		root "html/gnusocial";
		
		# Index
		index index.php;
		
		# PHP
		location ~ \.php {
			fastcgi_pass GNUsocial-php-handler;
			fastcgi_index index.php;
			include fastcgi.conf;
			
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			fastcgi_param SCRIPT_FILENAME $NGINX_PREFIX/$root_directive_value$fastcgi_script_name;
			fastcgi_param PATH_INFO $fastcgi_path_info;
			fastcgi_param SCRIPT_NAME $fastcgi_script_name;
			
			fastcgi_param REMOTE_ADDR $http_x_real_ip;
			
			#https
			set $isHTTPS $https;
			if ($http_x_forwarded_proto = "https") {
				set $isHTTPS "on";
			}
			fastcgi_param  HTTPS $isHTTPS if_not_empty;
			fastcgi_read_timeout 180;
		}
		
		# Location
		location / {
			try_files $uri $uri/ @gnusocial;
		}
		
		# Fancy URLs
		location @gnusocial {
			rewrite ^(.*)$ /index.php?p=$1 last;
		}
	}
	
#	pony.eu.org
########################################################################
	
	server {
		listen 443 ssl;
		server_name pony.eu.org *.pony.eu.org;
		
		ssl_certificate server.crt;
		ssl_certificate_key server.key;
		
		root html/ypmirror;
		
		location / {
			index index.php;
		}
		
		set $php_match_handle "";
		
		if ($uri ~ "^(.+?\.php)(/.*)?$") {
			set $php_match_handle "${php_match_handle}:1:";
		}
		
		if ($uri ~ "^/server_function/.*$") {
			set $php_match_handle "${php_match_handle}:0:";
		}
		
		if ($php_match_handle = ":1:") {
			rewrite ^/(.*)$ /server_function/PHP-SCRIPT-HANDLE-LOCATION/$1 last;
		}
		
		location ~ ^/server_function/PHP-SCRIPT-HANDLE-LOCATION/(?<php_request>.*)$ {
			if ($php_request ~* "^(.+?\.php)(/.*)?$") {
				set $script_filename $1;
				set $path_info $2;
			}
			root html/ypmirror;
			fastcgi_index index.php;
			include fastcgi_params;
			fastcgi_param PATH_INFO $path_info;
			fastcgi_param SCRIPT_FILENAME $document_root/$script_filename;
			if (-e $document_root/$script_filename) {
				fastcgi_pass php-handler;
			}
		}
		
	}
	
	#for tor
	server {
		listen 0.0.0.0:80;
		listen [::]:80;
		server_name yp.mindcraftn5xddk4.onion;
		
		root html/ypmirror;
		
		location / {
			index index.php;
		}
		
		set $php_match_handle "";
		
		if ($uri ~ "^(.+?\.php)(/.*)?$") {
			set $php_match_handle "${php_match_handle}:1:";
		}
		
		if ($uri ~ "^/server_function/.*$") {
			set $php_match_handle "${php_match_handle}:0:";
		}
		
		if ($php_match_handle = ":1:") {
			rewrite ^/(.*)$ /server_function/PHP-SCRIPT-HANDLE-LOCATION/$1 last;
		}
		
		location ~ ^/server_function/PHP-SCRIPT-HANDLE-LOCATION/(?<php_request>.*)$ {
			if ($php_request ~* "^(.+?\.php)(/.*)?$") {
				set $script_filename $1;
				set $path_info $2;
			}
			root html/ypmirror;
			fastcgi_index index.php;
			include fastcgi_params;
			fastcgi_param PATH_INFO $path_info;
			fastcgi_param SCRIPT_FILENAME $document_root/$script_filename;
			if (-e $document_root/$script_filename) {
				fastcgi_pass php-handler;
			}
		}
		
	}
	
#	lunasquee.eu.org
########################################################################
	
	server {
		listen 443 ssl;
		server_name lunasquee.eu.org *.lunasquee.eu.org
					lunasqu.ee *.lunasqu.ee;
		
		ssl_certificate letsencrypt/lunasqu.ee/fullchain.pem;
		ssl_certificate_key letsencrypt/lunasqu.ee/privkey.pem;
		ssl_dhparam dhparam.pem;
		add_header Strict-Transport-Security
			"max-age=15768000; includeSubDomains; preload;";
		
		error_page 502 /lunasquee/502.html;
		error_page 504 /lunasquee/504.html;
		
		location /lunasquee/ {
			internal;
			root "html";
		}
		
		location / {
			proxy_http_version 1.1;
			proxy_set_header Connection "keep-alive";
			proxy_pass http://127.0.0.1:5088/;
			proxy_set_header Host $host:$proxy_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_read_timeout 180;
		}
	}
	
########################################################################
}
